def solution(target):
    # 우선 점수판의 구성을 한다.
    case = [[target, 0] for _ in range(target+1 if target > 61 else 61)]
    case[50] = [1, 1] # 조합수, single or bool 개수
    for i in range(1, 21):
        case[i] = [1, 1] # 조합수, single or bool 개수
        case[i*2] = [1, 0]
        case[i*3] = [1, 0]

    # 60 숫자 이전에 빈 곳을 메꾸고 이후는 다트판 최대가 60 이므로 이전 60까지 탐색하도록 했다.
    for idx in range(23, len(case)):
        candidate = []
        min_index = 61 if idx > 61 else idx
        for comp_index in range(1, min_index):
            if case[idx - comp_index][0] + case[comp_index][0] <= case[idx][0]:
                case[idx][0] = case[idx - comp_index][0] + case[comp_index][0]
                candidate.append([case[idx - comp_index][0] + case[comp_index][0], case[idx - comp_index][1] + case[comp_index][1]])
        candidate.sort(key=lambda x: [x[0], -x[1]])
        if len(candidate) > 0:
            case[idx] = candidate[0]

    return case[target]    
